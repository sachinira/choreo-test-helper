openapi: 3.0.0
info:
  title: Product Catalog Service
  description: API for managing product information
  version: 1.0.0
servers:
  - url: http://localhost:8001
    description: Local development server
  - url: https://api.example.com
    description: Production server

paths:
  /:
    get:
      summary: Health check endpoint
      responses:
        '200':
          description: Service is running
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Product Catalog Service is running

  /products/:
    post:
      summary: Create a new product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '201':
          description: Product created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
    get:
      summary: Get all products
      responses:
        '200':
          description: List of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'

  /products/{product_id}:
    parameters:
      - name: product_id
        in: path
        required: true
        schema:
          type: integer
    get:
      summary: Get product by ID
      responses:
        '200':
          description: Product details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Product not found
    put:
      summary: Update product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '200':
          description: Product updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Product not found
    delete:
      summary: Delete product
      responses:
        '200':
          description: Product deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Product deleted successfully
        '404':
          description: Product not found

  /products/category/{category}:
    parameters:
      - name: category
        in: path
        required: true
        schema:
          type: string
    get:
      summary: Get products by category
      responses:
        '200':
          description: List of products in category
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'

components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: integer
          description: Product ID
        name:
          type: string
          description: Product name
        description:
          type: string
          description: Product description
        price:
          type: number
          format: float
          description: Product price
        category:
          type: string
          description: Product category
      required:
        - name
        - description
        - price
        - category 